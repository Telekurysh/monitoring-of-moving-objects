[project]
name = "sensortrack-pro"
version = "1.0.0"
description = ""
authors = [
    { name = "Telekurysh", email = "mic.mamaev@yandex.ru" }
]
readme = "README.md"


packages = [
    { include = "sensortrack_pro", from = "src" },
    { include = "tests", from = "." }
]

requires-python = ">=3.13"
dependencies = [
    "pydantic (>=2.10.6,<3.0.0)",
    "mypy (>=1.15.0,<2.0.0)",
    "ruff (>=0.11.2,<0.12.0)",
    "pytest (>=8.3.5,<9.0.0)",
    "fastapi (>=0.115.12,<0.116.0)",
    "uuid (>=1.30,<2.0)",
    "geopy (>=2.4.1,<3.0.0)",
    "email-validator (>=2.2.0,<3.0.0)",
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "geoalchemy2 (>=0.17.1,<0.18.0)",
    "pydantic-settings (>=2.8.1,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "greenlet (>=3.2.0,<4.0.0)",
    "python-jose (>=3.4.0,<4.0.0)",
    "bcrypt (==4.0.1)",
    "passlib (>=1.7.4,<2.0.0)",
    "uvicorn (>=0.34.2,<0.35.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "logging (>=0.4.9.6,<0.5.0.0)",
    "plaster-yaml (>=3.0.0,<4.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
package-mode = false

[tool.mypy]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
no_implicit_reexport = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[[tool.mypy.overrides]]
module = [
    "dynaconf",
    "keycloak",
    "scipy.*",
    "prometheus_api_client",
    "clearml",
    "matplotlib",
    "yaml",
    "atlassian",
    "urllib3.*",
    "google.protobuf.*",
    "requests.*",
    "kubernetes_asyncio.*",
    "tritonclient.*",
    "aiohttp.*",
    "pandas",
    "tqdm.*",
    "sklearn.*",
    "lxml.*",
    "apscheduler.*",
    "ffmpeg.*",
    "jiwer.*",
    "clickhouse_connect.*",
    "pydub.*",
    "opensearchpy.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "proto_source.crt.*",
    "proto_source.mts.*",
    "proto_source.sber.*",
    "proto_source.yandex.*",
    "proto_source.google.*"
]
disable_error_code = [
    "attr-defined",
    "name-defined",
    "import",
    "no-untyped-def",
    "arg-type",
    "type-arg",
    "var-annotated",
    "misc"
]
[tool.poetry.group.dev.dependencies]
pytest-asyncio = "^0.23.6"


[tool.ruff]
target-version = "py313"
line-length = 120
exclude = ["config/*", "data/*", "reports/*", "schedule_params/*"]

[tool.ruff.lint]
preview = true
select = ["A", "B", "C4", "ERA", "RET", "SIM", "TID", "ANN", "PIE", "PLR", "I", "N", "E", "PGH", "RUF", "F", "UP", "C901"]
ignore = [
    "B904",
    "B905",
    "N818",
    "UP035",
    "A005",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF006",
    "ANN204",
    "ANN401",
    "PLR0904",
    "PLR0914",
    "PLR6301",
    "PGH003",
]
per-file-ignores = { "src/sensor_track_pro/data_access/models/base.py" = ["N805"] }

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

unfixable = ["ERA"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
force-single-line = true
lines-between-types = 1
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pylint]
max-args = 10
max-returns = 10
max-branches = 25
max-statements = 75
max-nested-blocks = 10

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.format]
exclude = ["*.pyi"]

[tool.ruff.lint.mccabe]
max-complexity = 20