sensor_track_pro/
├── .github/
│   └── workflows/
│       └── ci.yml                     # CI/CD конфигурация
├── .vscode/
│   └── settings.json                  # Настройки для VSCode
├── src/
│   ├── sensor_track_pro/
│   │   ├── __init__.py
│   │   ├── config.py                  # Конфигурация приложения
│   │   ├── constants.py               # Константы приложения
│   │   ├── exceptions.py              # Кастомные исключения
│   │   ├── main.py                    # Точка входа FastAPI
│   │   ├── data_access/               # Компонент доступа к данным
│   │   │   ├── __init__.py
│   │   │   ├── repositories/          # Репозитории для работы с БД
│   │   │   │   ├── __init__.py
│   │   │   │   ├── base.py            # Базовый класс репозитория
│   │   │   │   ├── objects_repo.py    # Репозиторий для объектов
│   │   │   │   ├── sensors_repo.py    # Репозиторий для сенсоров
│   │   │   │   ├── events_repo.py     # Репозиторий для событий
│   │   │   │   ├── zones_repo.py      # Репозиторий для зон
│   │   │   │   ├── alerts_repo.py     # Репозиторий для оповещений
│   │   │   │   ├── routes_repo.py     # Репозиторий для маршрутов
│   │   │   │   ├── telemetry_repo.py  # Репозиторий для телеметрии
│   │   │   │   ├── users_repo.py      # Репозиторий для пользователей
│   │   │   │   └── object_zones_repo.py # Репозиторий для объект-зона
│   │   │   ├── models/                # Модели данных
│   │   │   │   ├── __init__.py
│   │   │   │   ├── base.py            # Базовый класс модели
│   │   │   │   ├── objects.py         # Модель для объектов
│   │   │   │   ├── sensors.py         # Модель для сенсоров
│   │   │   │   ├── events.py          # Модель для событий
│   │   │   │   ├── zones.py           # Модель для зон
│   │   │   │   ├── object_zones.py    # Модель для связи объект-зона
│   │   │   │   ├── alerts.py          # Модель для оповещений
│   │   │   │   ├── routes.py          # Модель для маршрутов
│   │   │   │   ├── telemetry.py       # Модель для телеметрии
│   │   │   │   ├── users.py           # Модель для пользователей
│   │   │   │   └── user_objects.py    # Модель для связи пользователь-объект
│   │   │   └── database.py            # Настройка подключения к БД
│   │   ├── business_logic/            # Компонент бизнес-логики
│   │   │   ├── __init__.py
│   │   │   ├── services/              # Сервисы бизнес-логики
│   │   │   │   ├── __init__.py
│   │   │   │   ├── object_service.py  # Сервис для работы с объектами
│   │   │   │   ├── sensor_service.py  # Сервис для работы с сенсорами
│   │   │   │   ├── event_service.py   # Сервис для работы с событиями
│   │   │   │   ├── zone_service.py    # Сервис для работы с зонами
│   │   │   │   ├── alert_service.py   # Сервис для работы с оповещениями
│   │   │   │   ├── route_service.py   # Сервис для работы с маршрутами
│   │   │   │   ├── telemetry_service.py # Сервис для работы с телеметрией
│   │   │   │   └── user_service.py    # Сервис для работы с пользователями
│   │   │   ├── models/                # Бизнес-модели
│   │   │   │   ├── __init__.py
│   │   │   │   ├── object_model.py    # Бизнес-модель объекта
│   │   │   │   ├── sensor_model.py    # Бизнес-модель сенсора
│   │   │   │   ├── event_model.py     # Бизнес-модель события
│   │   │   │   ├── zone_model.py      # Бизнес-модель зоны
│   │   │   │   ├── alert_model.py     # Бизнес-модель оповещения
│   │   │   │   ├── route_model.py     # Бизнес-модель маршрута
│   │   │   │   ├── telemetry_model.py # Бизнес-модель телеметрии
│   │   │   │   └── user_model.py      # Бизнес-модель пользователя
│   │   │   └── interfaces/            # Интерфейсы
│   │   │       ├── __init__.py
│   │   │       └── repositories/      # Интерфейсы репозиториев
│   │   │           ├── __init__.py
│   │   │           ├── iobject_repo.py # Интерфейс репозитория объектов
│   │   │           ├── isensor_repo.py # Интерфейс репозитория сенсоров
│   │   │           └── ...            # Другие интерфейсы
│   │   ├── api/                       # API слой
│   │   │   ├── __init__.py
│   │   │   ├── dependencies.py        # Зависимости FastAPI
│   │   │   ├── routes/                # Маршруты API
│   │   │   │   ├── __init__.py
│   │   │   │   ├── objects.py         # Маршруты для объектов
│   │   │   │   ├── sensors.py         # Маршруты для сенсоров
│   │   │   │   ├── events.py          # Маршруты для событий
│   │   │   │   ├── zones.py           # Маршруты для зон
│   │   │   │   ├── alerts.py          # Маршруты для оповещений
│   │   │   │   ├── routes.py          # Маршруты для маршрутов
│   │   │   │   ├── telemetry.py       # Маршруты для телеметрии
│   │   │   │   └── users.py           # Маршруты для пользователей
│   │   │   └── schemas/               # Схемы валидации
│   │   │       ├── __init__.py
│   │   │       ├── object_schemas.py  # Схемы для объектов
│   │   │       ├── sensor_schemas.py  # Схемы для сенсоров
│   │   │       ├── event_schemas.py   # Схемы для событий
│   │   │       ├── zone_schemas.py    # Схемы для зон
│   │   │       ├── alert_schemas.py   # Схемы для оповещений
│   │   │       ├── route_schemas.py   # Схемы для маршрутов
│   │   │       ├── telemetry_schemas.py # Схемы для телеметрии
│   │   │       └── user_schemas.py    # Схемы для пользователей
│   │   └── web/                       # Веб-интерфейс
│   │       ├── __init__.py
│   │       ├── static/                # Статические файлы
│   │       │   ├── css/               # CSS стили
│   │       │   │   └── main.css       # Основной CSS файл
│   │       │   └── img/               # Изображения
│   │       └── templates/             # HTML шаблоны
│   │           ├── base.html          # Базовый шаблон
│   │           ├── index.html         # Главная страница
│   │           ├── objects/           # Шаблоны для объектов
│   │           │   ├── list.html      # Список объектов
│   │           │   └── detail.html    # Детали объекта
│   │           └── ...                # Другие шаблоны
├── tests/                             # Тесты
│   ├── __init__.py
│   ├── conftest.py                    # Конфигурация тестов
│   ├── unit/                          # Модульные тесты
│   │   ├── __init__.py
│   │   ├── business_logic/            # Тесты бизнес-логики
│   │   │   ├── __init__.py
│   │   │   └── services/              # Тесты сервисов
│   │   │       ├── __init__.py
│   │   │       ├── test_object_service.py
│   │   │       └── ...                # Другие тесты
│   │   └── data_access/               # Тесты слоя доступа к данным
│   │       ├── __init__.py
│   │       └── repositories/          # Тесты репозиториев
│   │           ├── __init__.py
│   │           ├── test_objects_repo.py
│   │           └── ...                # Другие тесты
│   └── integration/                   # Интеграционные тесты
│       ├── __init__.py
│       ├── api/                       # Тесты API
│       │   ├── __init__.py
│       │   ├── test_objects_api.py
│       │   └── ...                    # Другие тесты API
│       └── data_access/               # Интеграционные тесты БД
│           ├── __init__.py
│           ├── test_db_connection.py
│           └── ...                    # Другие тесты БД
├── migrations/                        # Миграции БД
│   ├── versions/                      # Версии миграций
│   └── ...
├── docker/                            # Docker конфигурация
│   ├── Dockerfile                     # Основной Dockerfile
│   └── docker-compose.yml             # Compose конфигурация
├── scripts/                           # Скрипты
│   ├── seed_data.py                   # Заполнение тестовыми данными
│   └── ...
├── docs/                              # Документация
│   ├── architecture.md                # Архитектура проекта
│   ├── api.md                         # Документация API
│   └── ...
├── alembic.ini                        # Конфигурация Alembic
├── pyproject.toml                     # Poetry конфигурация
├── .env.example                       # Пример .env файла
├── .gitignore                         # Git игнорируемые файлы
├── README.md                          # Описание проекта
└── LICENSE                            # Лицензия
